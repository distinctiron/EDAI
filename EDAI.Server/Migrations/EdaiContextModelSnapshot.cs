// <auto-generated />
using System;
using EDAI.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EDAI.Server.Migrations
{
    [DbContext(typeof(EdaiContext))]
    partial class EdaiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Open")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReferenceDocumentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssignmentId");

                    b.HasIndex("ReferenceDocumentId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.EdaiDocument", b =>
                {
                    b.Property<int>("EdaiDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("DocumentFile")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("DocumentFileExtension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("TEXT");

                    b.HasKey("EdaiDocumentId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Essay", b =>
                {
                    b.Property<int>("EssayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EdaiDocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Evaluated")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EssayId");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("EdaiDocumentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Essays");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.FeedbackComment", b =>
                {
                    b.Property<int>("FeedbackCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommentFeedback")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CommentType")
                        .HasColumnType("INTEGER");

                    b.HasKey("FeedbackCommentId");

                    b.ToTable("FeedbackComments");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.IndexedContent", b =>
                {
                    b.Property<int>("IndexedContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EssayId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FromCharInContent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParagraphIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RunIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ToCharInContent")
                        .HasColumnType("INTEGER");

                    b.HasKey("IndexedContentId");

                    b.HasIndex("EssayId");

                    b.ToTable("IndexedContents");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Score", b =>
                {
                    b.Property<int>("ScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArgumentationRecommendation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("ArgumentationScore")
                        .HasColumnType("REAL");

                    b.Property<string>("AssignmentAnswer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AssignmentAnswerRecommendation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("AssignmentAnswerScore")
                        .HasColumnType("REAL");

                    b.Property<string>("EloquenceRecommendation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("EloquenceScore")
                        .HasColumnType("REAL");

                    b.Property<int>("EssayId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EvaluatedEssayDocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GrammarRecommendation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("GrammarScore")
                        .HasColumnType("REAL");

                    b.Property<float>("OverallScore")
                        .HasColumnType("REAL");

                    b.Property<string>("OverallStructure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OverallStructureRecommendation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("OverallStructureScore")
                        .HasColumnType("REAL");

                    b.HasKey("ScoreId");

                    b.HasIndex("EssayId");

                    b.HasIndex("EvaluatedEssayDocumentId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GraduationYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentClassId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId");

                    b.HasIndex("StudentClassId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.StudentClass", b =>
                {
                    b.Property<int>("StudentClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentClassId");

                    b.ToTable("StudentClasses");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.StudentSummary", b =>
                {
                    b.Property<int>("StudentSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FocusArea1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FocusArea2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FocusArea3")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentSummaryId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentSummaries");
                });

            modelBuilder.Entity("FeedbackCommentIndexedContent", b =>
                {
                    b.Property<int>("FeedbackCommentsFeedbackCommentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RelatedTextsIndexedContentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FeedbackCommentsFeedbackCommentId", "RelatedTextsIndexedContentId");

                    b.HasIndex("RelatedTextsIndexedContentId");

                    b.ToTable("FeedbackCommentIndexedContent");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Assignment", b =>
                {
                    b.HasOne("EDAI.Shared.Models.Entities.EdaiDocument", "ReferenceDocument")
                        .WithMany()
                        .HasForeignKey("ReferenceDocumentId");

                    b.Navigation("ReferenceDocument");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Essay", b =>
                {
                    b.HasOne("EDAI.Shared.Models.Entities.Assignment", "Assignment")
                        .WithMany("Essays")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDAI.Shared.Models.Entities.EdaiDocument", "Document")
                        .WithMany()
                        .HasForeignKey("EdaiDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDAI.Shared.Models.Entities.Student", "Student")
                        .WithMany("Essays")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("Document");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.IndexedContent", b =>
                {
                    b.HasOne("EDAI.Shared.Models.Entities.Essay", "Essay")
                        .WithMany("IndexedEssay")
                        .HasForeignKey("EssayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Essay");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Score", b =>
                {
                    b.HasOne("EDAI.Shared.Models.Entities.Essay", "Essay")
                        .WithMany("Scores")
                        .HasForeignKey("EssayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDAI.Shared.Models.Entities.EdaiDocument", "EvaluatedEssayDocument")
                        .WithMany()
                        .HasForeignKey("EvaluatedEssayDocumentId");

                    b.Navigation("Essay");

                    b.Navigation("EvaluatedEssayDocument");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Student", b =>
                {
                    b.HasOne("EDAI.Shared.Models.Entities.StudentClass", "StudentClass")
                        .WithMany("Students")
                        .HasForeignKey("StudentClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentClass");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.StudentSummary", b =>
                {
                    b.HasOne("EDAI.Shared.Models.Entities.Student", "Student")
                        .WithMany("StudentSummaries")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FeedbackCommentIndexedContent", b =>
                {
                    b.HasOne("EDAI.Shared.Models.Entities.FeedbackComment", null)
                        .WithMany()
                        .HasForeignKey("FeedbackCommentsFeedbackCommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDAI.Shared.Models.Entities.IndexedContent", null)
                        .WithMany()
                        .HasForeignKey("RelatedTextsIndexedContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Assignment", b =>
                {
                    b.Navigation("Essays");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Essay", b =>
                {
                    b.Navigation("IndexedEssay");

                    b.Navigation("Scores");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.Student", b =>
                {
                    b.Navigation("Essays");

                    b.Navigation("StudentSummaries");
                });

            modelBuilder.Entity("EDAI.Shared.Models.Entities.StudentClass", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
